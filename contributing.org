Contributions in any form are very much welcome. To make managing
these easier, we kindly ask that you follow the guidelines below.

* Reporting a bug or suggesting changes/improvements

  If you think you've found a bug in ~autode~, please let us know bu
  opening an issue on the main autoDE GitHub repository. This will
  give the autoDE developers a chance to confirm the bug, investigate
  it and hopefully fix it!

  When reporting an issue, we suggest you follow the following

  --------------------
  
  - Operating System (/e.g./ Ubuntu Linux 20.04)
  - Python version: (/e.g/ 3.9.4)
  - autoDE version: (

  **Description**
  <A one-line description of the bug>

  *To Reproduce*
  /The exact steps to reproduce the bug./

  *Expected behaviour*
  /A description of what you expected instead of the observed behaviour./

  --------------------

  When it comes to reporting bugs, the more details the better. Do not
  hesitate to include command line output and screenshots as part of
  your bug report.

  *An idea for a fix?*, feel free to describe it in your bug report. 

* Contributing to the code

  Anybody is free to modify their own copy of ~autode~. We would also
  love for you to contirbute your changes back to the main repository,
  so that other autoDE users can benefit from them.

  The high-level contributing workflow is:
  1. Fork the main repository (~duartegroup/autode~)
  2. Implement changes and tests on your own fork on a given branch
     (~<gh-username>/autode:<branch-name>~)
  3. Create a new Pull Request on the main autoDE repository from your
     development branch onto ~autode:master~.

  If you're unfamiliar with GitHub forks and pull requests, you can
  read [[https://docs.github.com/en/get-started/quickstart/fork-a-repo][Fork a repo]] and [[https://docs.github.com/en/github/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request][Creating a pull request]] on the GitHub docs.

** Guidelines for Pull Requests
*** Forks instead of branches
    By default contributors do not have permission to push branches to
    the main autode remote repository. In most scenarios, you should
    propose your contribution through a Pull Request from a fork.
*** Small pull requests 
    Smaller Pull Requests are reviewed faster, and more accurately.  We
    therefore, ask that contributors keep the set of of change within
    a Pull Request as small as possible. If your Pull Request modifies more than
    5 files, and/or several hunder lines of code, you should probably
    break it down to two or more Pull Requests.
*** Pull Requests are more than just code
    A Pull Request is difficult to review without a description of
    context and motivation for the attached set of changes. Whenever
    you open a new Pull Request, please include the following information:

    - *A title* that explicits the main change addressed by the Pull
      Request. If you struggle to come out with a short and
      descriptive title, this is perhaps an indication that it could
      be broken down into smaller pieces.
    - *A description* of the context and motivation for the attached set
      of changes. /What is the current state of things?/, /Why should
      it be changed?/.
    - *A summary* of changes outlining the the main points addressed by
      your Pull Request, and how they relate to each other. Be sure to
      mention any assumption(s) and/or choices that your made and
      alternative design/implementaions that you considered. /What did
      you change or add?/ /How?/. /Anything you could have done
      differently? Why not?/.
    - *Some advice for reviewers*. Explicit the parts of your changes on
      which you would expect reviwers to focus their attention. These
      are often parts that you're unsure about or code that may be
      difficult to read. 
*** Draft Pull Requests
    If you're planning to work on something and can answer the four
    points above, you can open a new Pull Request and convert it to
    "Draft". This is especially useful if you'd like to make some of
    your changes visible but do not consider them ready for review yet.

    Draft Pull Requests are a way to signal to other developers that
    you are currently working on something and open for discussion
    about it. It's also providing the development team a glimpse of
    future code reviews.
    

** Style guidelines
   Enforcing code style in contributions is key to maintain a
   consistent code base.
*** PEP8 formatting
    autoDE's code follows the PEP8 guidelines for code formatting. You
    can check and apply formatting to your contribution(s) using tools
    such as flake8 or black.
*** Naming
**** Variables
     - Variable names should be 'snake_case'.
**** Functions
     - Function names should be 'snake_case'.
     - Functions should always exit with an explicit ~return~
       statement, even if this ~return None~.
     - Functions should raise ValueError for invalid input
     - Functions should return None rather than raising exceptions upon /failure/
     - Docstrings are in Google format
**** Classes
     - Classes names should be 'CamelCase'.
*** Custom types instead of primitive types
*** Versioning
    Versioning is semantic in the *X.Y.Z* style. X is unlikely to exceed 1
    baring a complete rewrite; Y should be updated whenever there are backwards
    incompatible changes; Z should be incremented for bugfixes and tweaks that
    maintain all components of the public facing API.
** Tests

   As much as possible, contributions should be tested.

   Tests live in ~tests/~, with roughly one ~test_<module>~ per module
   or class. Unless your contribution adds a new module, your tests
   should be added to an existing test file.
